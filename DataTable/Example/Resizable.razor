@page "/resizable"

@inject WeatherForecastService ForecastService

<h1>Resizable example</h1>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <DataTable TModel="WeatherForecast" Items="forecasts" IncludeAdvancedFilters="true">
        <DataTableColumn TModel="WeatherForecast" MinWidthHeader="2" IsResizable="true" Property="(e) => e.Date" />
        <DataTableColumn TModel="WeatherForecast" MinWidthHeader="10" IsResizable="true" Property="(e) => e.TemperatureC" CustomTitle="Celsius" />
        <DataTableColumn TModel="WeatherForecast" MinWidthHeader="10" IsResizable="true" Property="(e) => e.TemperatureF" CustomTitle="Fahrenheit" />
        <DataTableColumn TModel="WeatherForecast" MinWidthHeader="10" IsResizable="true" Property="(e) => e.MyNullableInt" />
        <DataTableColumn TModel="WeatherForecast" MinWidthHeader="10" IsResizable="true" Property="(e) => e.Summary" />
        <DataTableColumn TModel="WeatherForecast" MinWidthHeader="10" IsResizable="true" Property="(e) => e.Country" />
        <DataTableColumn TModel="WeatherForecast" MinWidthHeader="10" IsResizable="true" Property="(e) => e.UpdatedRecently" CustomTitle="Recently updated" />
    </DataTable>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now, 5);
    }
}
